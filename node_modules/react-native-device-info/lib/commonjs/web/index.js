var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _reactNative=require("react-native");var deviceInfoEmitter=new _reactNative.NativeEventEmitter(_reactNative.NativeModules.RNDeviceInfo);var isBatteryCharging=false,batteryLevel=-1,powerState={};var getMaxMemorySync=function getMaxMemorySync(){if(window.performance&&window.performance.memory){return window.performance.memory.jsHeapSizeLimit;}return-1;};var getInstallReferrerSync=function getInstallReferrerSync(){return document.referrer;};var isAirplaneModeSync=function isAirplaneModeSync(){return!!navigator.onLine;};var getUserAgentSync=function getUserAgentSync(){return window.navigator.userAgent;};var isLocationEnabledSync=function isLocationEnabledSync(){return!!navigator.geolocation;};var getTotalMemorySync=function getTotalMemorySync(){if(navigator.deviceMemory){return navigator.deviceMemory*1000000000;}return-1;};var getUsedMemorySync=function getUsedMemorySync(){if(window.performance&&window.performance.memory){return window.performance.memory.usedJSHeapSize;}return-1;};var _getPowerState=function getPowerState(battery){var level=battery.level,charging=battery.charging,chargingtime=battery.chargingtime,dischargingtime=battery.dischargingtime;return{batteryLevel:level,lowPowerMode:false,batteryState:level===1?'full':charging?'charging':'unplugged',chargingtime:chargingtime,dischargingtime:dischargingtime};};var init=function init(){var battery;return _regenerator.default.async(function init$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!navigator.getBattery){_context.next=7;break;}_context.next=3;return _regenerator.default.awrap(navigator.getBattery());case 3:battery=_context.sent;isBatteryCharging=battery.charging;battery.addEventListener('chargingchange',function(){var charging=battery.charging;isBatteryCharging=charging;powerState=_getPowerState(battery);deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange',powerState);});battery.addEventListener('levelchange',function(){var level=battery.level;batteryLevel=level;powerState=_getPowerState(battery);deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange',level);if(level<0.2){deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow',level);}});case 7:case"end":return _context.stop();}}});};var getBaseOsSync=function getBaseOsSync(){var userAgent=window.navigator.userAgent,platform=window.navigator.platform,macosPlatforms=['Macintosh','MacIntel','MacPPC','Mac68K'],windowsPlatforms=['Win32','Win64','Windows','WinCE'],iosPlatforms=['iPhone','iPad','iPod'];var os=platform;if(macosPlatforms.indexOf(platform)!==-1){os='Mac OS';}else if(iosPlatforms.indexOf(platform)!==-1){os='iOS';}else if(windowsPlatforms.indexOf(platform)!==-1){os='Windows';}else if(/Android/.test(userAgent)){os='Android';}else if(!os&&/Linux/.test(platform)){os='Linux';}return os;};init();module.exports={getInstallReferrer:function getInstallReferrer(){return _regenerator.default.async(function getInstallReferrer$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt("return",getInstallReferrerSync());case 1:case"end":return _context2.stop();}}});},getInstallReferrerSync:getInstallReferrerSync,getUserAgent:function getUserAgent(){return _regenerator.default.async(function getUserAgent$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt("return",getUserAgentSync());case 1:case"end":return _context3.stop();}}});},getUserAgentSync:getUserAgentSync,isBatteryCharging:function isBatteryCharging(){var battery;return _regenerator.default.async(function isBatteryCharging$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!navigator.getBattery){_context4.next=5;break;}_context4.next=3;return _regenerator.default.awrap(navigator.getBattery());case 3:battery=_context4.sent;return _context4.abrupt("return",battery.level);case 5:return _context4.abrupt("return",false);case 6:case"end":return _context4.stop();}}});},isBatteryChargingSync:function isBatteryChargingSync(){return _regenerator.default.async(function isBatteryChargingSync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:return _context5.abrupt("return",isBatteryCharging);case 1:case"end":return _context5.stop();}}});},isCameraPresent:function isCameraPresent(){var devices;return _regenerator.default.async(function isCameraPresent$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!navigator.getBattery){_context6.next=5;break;}_context6.next=3;return _regenerator.default.awrap(navigator.mediaDevices.enumerateDevices());case 3:devices=_context6.sent;return _context6.abrupt("return",!!devices.find(function(d){return d.kind==='videoinput';}));case 5:return _context6.abrupt("return",false);case 6:case"end":return _context6.stop();}}});},isCameraPresentSync:function isCameraPresentSync(){return _regenerator.default.async(function isCameraPresentSync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:console.log('[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent');return _context7.abrupt("return",false);case 2:case"end":return _context7.stop();}}});},getBatteryLevel:function getBatteryLevel(){var battery;return _regenerator.default.async(function getBatteryLevel$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(!navigator.getBattery){_context8.next=5;break;}_context8.next=3;return _regenerator.default.awrap(navigator.getBattery());case 3:battery=_context8.sent;return _context8.abrupt("return",battery.level);case 5:return _context8.abrupt("return",-1);case 6:case"end":return _context8.stop();}}});},getBatteryLevelSync:function getBatteryLevelSync(){return batteryLevel;},isLocationEnabled:function isLocationEnabled(){return _regenerator.default.async(function isLocationEnabled$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:return _context9.abrupt("return",isLocationEnabledSync());case 1:case"end":return _context9.stop();}}});},isLocationEnabledSync:isLocationEnabledSync,isAirplaneMode:function isAirplaneMode(){return _regenerator.default.async(function isAirplaneMode$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:return _context10.abrupt("return",isAirplaneModeSync());case 1:case"end":return _context10.stop();}}});},isAirplaneModeSync:isAirplaneModeSync,getBaseOs:function getBaseOs(){return _regenerator.default.async(function getBaseOs$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:return _context11.abrupt("return",getBaseOsSync());case 1:case"end":return _context11.stop();}}});},getBaseOsSync:getBaseOsSync,getTotalDiskCapacity:function getTotalDiskCapacity(){var _ref,quota;return _regenerator.default.async(function getTotalDiskCapacity$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:if(!(navigator.storage&&navigator.storage.estimate)){_context12.next=6;break;}_context12.next=3;return _regenerator.default.awrap(navigator.storage.estimate());case 3:_ref=_context12.sent;quota=_ref.quota;return _context12.abrupt("return",quota);case 6:return _context12.abrupt("return",-1);case 7:case"end":return _context12.stop();}}});},getTotalDiskCapacitySync:function getTotalDiskCapacitySync(){console.log('[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity');return-1;},getFreeDiskStorage:function getFreeDiskStorage(){var _ref2,quota,usage;return _regenerator.default.async(function getFreeDiskStorage$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:if(!(navigator.storage&&navigator.storage.estimate)){_context13.next=7;break;}_context13.next=3;return _regenerator.default.awrap(navigator.storage.estimate());case 3:_ref2=_context13.sent;quota=_ref2.quota;usage=_ref2.usage;return _context13.abrupt("return",quota-usage);case 7:return _context13.abrupt("return",-1);case 8:case"end":return _context13.stop();}}});},getFreeDiskStorageSync:function getFreeDiskStorageSync(){console.log('[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage');return-1;},getMaxMemory:function getMaxMemory(){return _regenerator.default.async(function getMaxMemory$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:return _context14.abrupt("return",getMaxMemorySync());case 1:case"end":return _context14.stop();}}});},getMaxMemorySync:getMaxMemorySync,getUsedMemory:function getUsedMemory(){return _regenerator.default.async(function getUsedMemory$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:return _context15.abrupt("return",getUsedMemorySync());case 1:case"end":return _context15.stop();}}});},getUsedMemorySync:getUsedMemorySync,getTotalMemory:function getTotalMemory(){return _regenerator.default.async(function getTotalMemory$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:return _context16.abrupt("return",getTotalMemorySync());case 1:case"end":return _context16.stop();}}});},getTotalMemorySync:getTotalMemorySync,getPowerState:function getPowerState(){var battery;return _regenerator.default.async(function getPowerState$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:if(!navigator.getBattery){_context17.next=5;break;}_context17.next=3;return _regenerator.default.awrap(navigator.getBattery());case 3:battery=_context17.sent;return _context17.abrupt("return",_getPowerState(battery));case 5:return _context17.abrupt("return",{});case 6:case"end":return _context17.stop();}}});},getPowerStateSync:function getPowerStateSync(){return powerState;}};
//# sourceMappingURL=index.js.map